[
    {
        "id": "8cfc727d22e45b7b",
        "type": "tab",
        "label": "detec. pres. SONOFF",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e1882475c7e68a4",
        "type": "tab",
        "label": "Linky Raw",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b2bc5a38cf3f145",
        "type": "tab",
        "label": "enregist. prises TASMOTA",
        "disabled": false,
        "info": "mqtt de la prise pilotée vers la base de donnée",
        "env": []
    },
    {
        "id": "ece408675f10c1f2",
        "type": "mqtt-broker",
        "name": "raspberry pi3 mosquitto",
        "broker": "192.168.1.28",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6c74ddb1e64af2fb",
        "type": "ui_tab",
        "name": "tableau de bord",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b8057ffb06f081d3",
        "type": "ui_group",
        "name": "Watts  instantané",
        "tab": "6c74ddb1e64af2fb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74a301651cfd733f",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "09110bf672e0483b",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "creppcarbone",
        "tz": "+00:00",
        "charset": "UTF8"
    },
    {
        "id": "f448c91c09f9275b",
        "type": "mqtt-broker",
        "name": "mqtt yoga",
        "broker": "192.168.1.25",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8dfdc74d6a736590",
        "type": "mqtt-broker",
        "name": "rap pi 2",
        "broker": "192.168.1.38",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4e528085.a1bfa",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 0
    },
    {
        "id": "a6e358b.672ffa8",
        "type": "ui_group",
        "name": "LED Testing",
        "tab": "4e528085.a1bfa",
        "order": 1,
        "disp": true,
        "width": "4"
    },
    {
        "id": "ef6a5f4f899b1665",
        "type": "ui_text",
        "z": "8cfc727d22e45b7b",
        "group": "b8057ffb06f081d3",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "bureau Julien",
        "label": "pJ",
        "format": "{{msg.payload.value}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 80,
        "wires": []
    },
    {
        "id": "548429de878b6294",
        "type": "mqtt in",
        "z": "8cfc727d22e45b7b",
        "name": "mqtt presence bureau Julien",
        "topic": "zigbee2mqtt/0x00124b002fa988e3",
        "qos": "0",
        "datatype": "json",
        "broker": "ece408675f10c1f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "aa1c0a840f75e3b5",
                "a8a3d90a445dfa16",
                "88f11d348fed8516",
                "b89e09c26ca71da1",
                "3cf6882bbf868bef",
                "b85f15e9788381bd"
            ]
        ]
    },
    {
        "id": "aa1c0a840f75e3b5",
        "type": "debug",
        "z": "8cfc727d22e45b7b",
        "name": "presence",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.occupancy",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 540,
        "y": 160,
        "wires": []
    },
    {
        "id": "a8a3d90a445dfa16",
        "type": "ui_led2",
        "z": "8cfc727d22e45b7b",
        "order": 6,
        "group": "b8057ffb06f081d3",
        "width": "6",
        "height": "1",
        "label": "passage bureau julien",
        "property": "payload.occupancy",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#ffa500",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ffffff",
                "value": "\"false\"",
                "valueType": "str"
            },
            {
                "color": "#ffa500",
                "value": "\"true\"",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": true,
        "shape": "circle",
        "showGlow": false,
        "name": "passage bureau Julien",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "88f11d348fed8516",
        "type": "function",
        "z": "8cfc727d22e45b7b",
        "name": "function 1",
        "func": "msg.payload = {value:msg.payload.occupancy, srvtime:Date.now()};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            [
                "ef6a5f4f899b1665"
            ]
        ]
    },
    {
        "id": "b89e09c26ca71da1",
        "type": "ui_text",
        "z": "8cfc727d22e45b7b",
        "d": true,
        "group": "b8057ffb06f081d3",
        "order": 6,
        "width": 2,
        "height": 2,
        "name": "pres bureau Julien",
        "label": "presence BJ",
        "format": "{{msg.payload.occupancy}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 330,
        "y": 240,
        "wires": []
    },
    {
        "id": "24bfd4e4463d1831",
        "type": "ui_text",
        "z": "8cfc727d22e45b7b",
        "group": "b8057ffb06f081d3",
        "order": 6,
        "width": "6",
        "height": "2",
        "name": "timeJulien",
        "label": "dernier passage",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "05784e1d0c884d6b",
        "type": "function",
        "z": "8cfc727d22e45b7b",
        "name": "Format date",
        "func": "const dateNow = {'payload': formatDate()}\n\n\nfunction formatDate(){\n//29 Aug 2021 06:15:36\n    let date = new Date();\n    let year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n    let month  = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\n    let day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n    let time = date.toLocaleTimeString('en-US', { hour12: false });\n    return `${day} ${month} ${year} ${time}`;\n}\n\nreturn dateNow",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": [
            [
                "24bfd4e4463d1831",
                "381b0538370f55b4"
            ]
        ]
    },
    {
        "id": "5d65b0583e8c1f67",
        "type": "inject",
        "z": "8cfc727d22e45b7b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "05784e1d0c884d6b"
            ]
        ]
    },
    {
        "id": "381b0538370f55b4",
        "type": "debug",
        "z": "8cfc727d22e45b7b",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "3cf6882bbf868bef",
        "type": "switch",
        "z": "8cfc727d22e45b7b",
        "name": "",
        "property": "payload.occupancy",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "05784e1d0c884d6b"
            ],
            [
                "05784e1d0c884d6b"
            ]
        ]
    },
    {
        "id": "b85f15e9788381bd",
        "type": "function",
        "z": "8cfc727d22e45b7b",
        "name": "Format date",
        "func": "const dateNow = {'payload': formatDate()}\n\n\nfunction formatDate(){\n//29 Aug 2021 06:15:36\n    let date = new Date();\n    let year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n    let month  = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\n    let day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n    let time = date.toLocaleTimeString('en-US', { hour12: false });\n    return `${day} ${month} ${year} ${time}`;\n}\n\nreturn dateNow",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "ba5879994f56f86c"
            ]
        ]
    },
    {
        "id": "ba5879994f56f86c",
        "type": "ui_text",
        "z": "8cfc727d22e45b7b",
        "group": "b8057ffb06f081d3",
        "order": 6,
        "width": "6",
        "height": "2",
        "name": "timeJulien",
        "label": "dernier chgt etat",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "fd8686041a5238bb",
        "type": "delay",
        "z": "1e1882475c7e68a4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "a0eaefa39f7387bb",
                "6fbd908efa4e0cab",
                "912807d2762304ea"
            ]
        ]
    },
    {
        "id": "af5e35384c6a8fd3",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "prepare sql",
        "func": "msg = {};\nmsg.topic = 'SELECT time, etot FROM creppcarbone.linky ORDER BY time DESC LIMIT 1';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "ee778b748b798f30"
            ]
        ]
    },
    {
        "id": "a0eaefa39f7387bb",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "set topic input",
        "func": "msg.topic = \"input\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 220,
        "wires": [
            [
                "ecb006d2e9c55216",
                "4a621e2cd6cd9430"
            ]
        ]
    },
    {
        "id": "03d6329176958f54",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "transform",
        "func": "if (msg.payload.length === 0) {\n    return {\n        topic: 'previous',\n        payload: {\n            etot: 0,\n            time: 0,\n        }\n    };\n}\n\nconst row = msg.payload[0];\nreturn {\n    topic: 'previous',\n    payload: {\n        etot: row.etot,\n        time: row.time,\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 520,
        "wires": [
            [
                "4a621e2cd6cd9430"
            ]
        ]
    },
    {
        "id": "6fbd908efa4e0cab",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "get previous",
        "func": "const [etot, time] = flow.get(['previous_etot', 'previous_time'])\n\nif (etot && time) {\n    return {\n        topic: 'previous',\n        payload: {\n            etot,\n            time,\n        }\n    };\n}\n\nreturn {\n    payload: null,\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            [
                "73b569368485cb70",
                "e3259a8f3a463763"
            ]
        ]
    },
    {
        "id": "73b569368485cb70",
        "type": "switch",
        "z": "1e1882475c7e68a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "7b32a85df512b5d9",
                "400f75e501ea0e83",
                "2bfeaa424f66d6ba",
                "4a621e2cd6cd9430"
            ],
            [
                "af5e35384c6a8fd3",
                "ae19ececeef53b53"
            ]
        ]
    },
    {
        "id": "35f3407f8ec8ce6f",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "sql output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1600,
        "y": 520,
        "wires": []
    },
    {
        "id": "7b32a85df512b5d9",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "prev_etot",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.etot",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1540,
        "y": 360,
        "wires": []
    },
    {
        "id": "400f75e501ea0e83",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "prev_time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.time",
        "targetType": "msg",
        "statusVal": "payload.time",
        "statusType": "auto",
        "x": 1540,
        "y": 420,
        "wires": []
    },
    {
        "id": "2bfeaa424f66d6ba",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "flow context is not null",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1560,
        "y": 300,
        "wires": []
    },
    {
        "id": "912807d2762304ea",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "input etot",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1400,
        "y": 100,
        "wires": []
    },
    {
        "id": "ae19ececeef53b53",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "flow contexty is null",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1190,
        "y": 560,
        "wires": []
    },
    {
        "id": "e3259a8f3a463763",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "topic previous",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "b0477a6efc85ed21",
        "type": "inject",
        "z": "1e1882475c7e68a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "88c3bcbcc06e1408"
            ]
        ]
    },
    {
        "id": "88c3bcbcc06e1408",
        "type": "change",
        "z": "1e1882475c7e68a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "previous_totalCO2cons",
                "pt": "flow",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ea4f7cafaa434b4b",
        "type": "mqtt in",
        "z": "1e1882475c7e68a4",
        "name": "mqtt linky lixee",
        "topic": "zigbee2mqtt/0x00158d00062038f4",
        "qos": "0",
        "datatype": "json",
        "broker": "ece408675f10c1f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 320,
        "wires": [
            [
                "ac976aeec2a880bd",
                "edb5965d30ed4d00",
                "da222be989a7dd32",
                "bdf80ea2bb298775",
                "d70a3b268379ad19",
                "f2df1e9809683376"
            ]
        ]
    },
    {
        "id": "ac976aeec2a880bd",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "linky lixee",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 300,
        "y": 320,
        "wires": []
    },
    {
        "id": "544361307ef8ad40",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "apparent_power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 560,
        "y": 400,
        "wires": []
    },
    {
        "id": "edb5965d30ed4d00",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "apparent_power",
        "func": "msg.payload = msg.payload.apparent_power;\n//msg.payload = msg.payload.ENERGY.Power.slice(7, 12);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "544361307ef8ad40",
                "1302cff22c168a27",
                "508c23cc42f4af2d"
            ]
        ]
    },
    {
        "id": "da222be989a7dd32",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "current_summ_delivered",
        "func": "msg.payload = msg.payload.current_summ_delivered*1000;\n//msg.payload = msg.payload.ENERGY.Power.slice(7, 12);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 260,
        "wires": [
            [
                "114f3b498cfa1f7b",
                "912807d2762304ea",
                "6fbd908efa4e0cab",
                "a0eaefa39f7387bb"
            ]
        ]
    },
    {
        "id": "ecb006d2e9c55216",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "inputt",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1730,
        "y": 160,
        "wires": []
    },
    {
        "id": "114f3b498cfa1f7b",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "total power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "4a621e2cd6cd9430",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "calcul CO2 revu",
        "func": "  var frprod =global.get(\"FR.prod\"); \n  var frco2=  global.get(\"FR.co2\");\n    var deprod =global.get(\"DE.prod\"); \n  var deco2=  global.get(\"DE.co2\");\n    var atprod =global.get(\"AT.prod\"); \n  var atco2=  global.get(\"AT.co2\");\n  var czprod =global.get(\"CZ.prod\"); \n  var czco2=  global.get(\"CZ.co2\");\n    var gbprod =global.get(\"GB.prod\"); \n  var gbco2=  global.get(\"GB.co2\");\n    var esprod =global.get(\"ES.prod\"); \n  var esco2=  global.get(\"ES.co2\");\n  var itprod =global.get(\"IT.prod\"); \n  var itco2=  global.get(\"IT.co2\");\n    var plprod =global.get(\"PL.prod\"); \n  var plco2=  global.get(\"PL.co2\");\nvar euprod= frprod+deprod+atprod+czprod+gbprod+esprod+itprod+plprod ;\nvar euco2= frco2+deco2+atco2+czco2+gbco2+esco2+itco2+plco2;\nvar facteurco2 =euco2/euprod;\n\n\n\n// Record both inputs\ncontext.data = context.data || {};\nswitch (msg.topic) {\n    case \"input\":\n        context.data.input = msg.payload;\n        break;\n    case \"previous\":\n        context.data.previous = msg.payload;\n        break;\n    default:\n        node.warn(`Unknown topic ${msg.topic}`);\n}\nmsg = null;\n\n// Run if both inputs received\nif (context.data.input && context.data.previous) {\n    const etot = context.data.input;\n    const time = new Date()\n    const previous_etot = context.data.previous.etot;\n    const previous_time = context.data.previous.time;\n    const cO2cons = (etot-previous_etot)*facteurco2;\n    const facCO2 = facteurco2;\n\n    flow.set('previous_etot', etot);\n    flow.set('previous_time', time);\n    context.data = {};\n    if (etot > previous_etot){\n\n      return {\n          payload: {\n              time: time,\n              etot: etot,\n              econs: etot - previous_etot,\n              previous_time: previous_time,\n              cO2cons: cO2cons,\n              facCO2: facCO2\n                  },\n      \n\n          topic: 'INSERT INTO creppcarbone.linky (`time`, `previous_time`, `etot`, `econs`,`cO2cons`,`factCO2`) VALUES (:time, :previous_time, :etot, :econs, :cO2cons, :facCO2);'\n          }\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 380,
        "wires": [
            [
                "77c87053d61ad404"
            ]
        ]
    },
    {
        "id": "508c23cc42f4af2d",
        "type": "ui_chart",
        "z": "1e1882475c7e68a4",
        "name": "linky",
        "group": "b8057ffb06f081d3",
        "order": 4,
        "width": 6,
        "height": 3,
        "label": "linky",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f2df1e9809683376",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "d": true,
        "name": "chargement linky lixee",
        "func": " var active_energy_out_d01 = msg.payload.active_energy_out_d01;\n var active_energy_out_d02 = msg.payload.active_energy_out_d02;\n var active_power = msg.payload.active_power;\n var apparent_power = msg.payload.apparent_power;\n var current_summ_delivered= msg.payload.current_summ_delivered;\n //var current_price =msg.payload.current_price.replace('HEURE','');\n var current_price = 20;\n if (msg.payload.current_price.match('PLEINE')) current_price=27;\n\nvar query = \"INSERT INTO linky_raw (active_energy_out_d01, active_energy_out_d02,active_power,apparent_power,current_summ_delivered,current_price) VALUES (\" + active_energy_out_d01 + \" ,\" + active_energy_out_d02 + \",\" + active_power + \",\" + apparent_power + \",\"+ current_summ_delivered + \",\"+ current_price + \")\";\nmsg.topic = query;\n\n \n         \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 580,
        "wires": [
            [
                "6b612d60876b1b29",
                "2f21bdebfda36e2c"
            ]
        ]
    },
    {
        "id": "2f21bdebfda36e2c",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "d": true,
        "name": "linky_raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 400,
        "y": 540,
        "wires": []
    },
    {
        "id": "bdf80ea2bb298775",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "apparent_power",
        "func": "msg.payload = msg.payload.current_date;\n//msg.payload = msg.payload.ENERGY.Power.slice(7, 12);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            [
                "f272fd1915cdacb2"
            ]
        ]
    },
    {
        "id": "f272fd1915cdacb2",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "current date",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "49cee46db59516c0",
        "type": "delay",
        "z": "1e1882475c7e68a4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "0c373af943e4af8e",
                "7d757f1304d9fd63"
            ]
        ]
    },
    {
        "id": "d70a3b268379ad19",
        "type": "function",
        "z": "1e1882475c7e68a4",
        "name": "chargement linky raw eco",
        "func": " //var active_energy_out_d01 = msg.payload.active_energy_out_d01;\n //var active_energy_out_d02 = msg.payload.active_energy_out_d02;\n //var active_power = msg.payload.active_power;\n var apparent_power = msg.payload.apparent_power;\n //var current_summ_delivered= msg.payload.current_summ_delivered;\n //var current_price =msg.payload.current_price.replace('HEURE','');\n var current_price = 20;\n// if (msg.payload.current_price.match('PLEINE')) current_price=27;\n\nvar query = \"INSERT INTO linky_raw_eco ( apparent_power ) VALUES ( \" + apparent_power +   \")\";\nmsg.topic = query;\n\n \n         \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 660,
        "wires": [
            [
                "49cee46db59516c0"
            ]
        ]
    },
    {
        "id": "77c87053d61ad404",
        "type": "delay",
        "z": "1e1882475c7e68a4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2130,
        "y": 380,
        "wires": [
            [
                "3171918ea8cb57a5"
            ]
        ]
    },
    {
        "id": "ba70b988ee9c54ad",
        "type": "ui_template",
        "z": "1e1882475c7e68a4",
        "d": true,
        "group": "b8057ffb06f081d3",
        "name": "template icone",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script src=\"https://code.iconify.design/1/1.0.7/iconify.min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7d757f1304d9fd63",
        "type": "debug",
        "z": "1e1882475c7e68a4",
        "name": "insert",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 740,
        "wires": []
    },
    {
        "id": "ee778b748b798f30",
        "type": "mysql",
        "z": "1e1882475c7e68a4",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "select previous",
        "x": 1440,
        "y": 520,
        "wires": [
            [
                "03d6329176958f54",
                "35f3407f8ec8ce6f"
            ]
        ]
    },
    {
        "id": "3171918ea8cb57a5",
        "type": "mysql",
        "z": "1e1882475c7e68a4",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "insert etot",
        "x": 2360,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6b612d60876b1b29",
        "type": "mysql",
        "z": "1e1882475c7e68a4",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "insert etot",
        "x": 460,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "0c373af943e4af8e",
        "type": "mysql",
        "z": "1e1882475c7e68a4",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "insert etot",
        "x": 620,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1302cff22c168a27",
        "type": "ui_artlessgauge2",
        "z": "1e1882475c7e68a4",
        "group": "b8057ffb06f081d3",
        "order": 1,
        "width": 3,
        "height": 3,
        "name": "linky",
        "icon": "iconify-mdi:pylon 48px",
        "label": "linky",
        "unit": "Watts",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "style": "1",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "log2": false,
        "sectors": [
            {
                "val": 0,
                "col": "#ff9900",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#ff9900",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": false,
        "diffCenter": "",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "57f0728e8c2dbfe9",
        "type": "e-mail",
        "z": "1e1882475c7e68a4",
        "d": true,
        "server": "smtp.free.fr",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "julienbourgeois56@free.fr",
        "dname": "",
        "x": 1020,
        "y": 60,
        "wires": []
    },
    {
        "id": "76bf4d039fa7e8c0",
        "type": "delay",
        "z": "8b2bc5a38cf3f145",
        "name": "toutes les 5 minutes",
        "pauseType": "rate",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "4f8f2a81a2c1a3ab",
                "e90b2187ae385d16",
                "1e3184219c8b4898",
                "c4e134f97f7fae56"
            ]
        ]
    },
    {
        "id": "4f8f2a81a2c1a3ab",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": " query panneau",
        "func": "var P1 = msg.payload.Time;\nvar P8 = msg.payload.ENERGY.Power;\nvar P9 = msg.payload.ENERGY.Today;\nvar P10 =msg.payload.ENERGY.Total;\nvar P13 =msg.payload.ENERGY.Yesterday;\nvar P14 = 0;\nvar P15 = 0;\nP1=new Date(P1);\n\nmsg.payload = {\n    time: P1,\n};\nvar query = \"INSERT INTO panneausolaire (time,activepower,energytoday,energytotal,previous_time,energycons) VALUES (:time ,\" + P8 + \", \" + P9 + \", \" + P10 + \",:time ,\" + P14 + \")\";\nmsg.topic = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 80,
        "wires": [
            [
                "3cae88c92b6b97e5"
            ]
        ]
    },
    {
        "id": "349664f2c5aa8341",
        "type": "mysql",
        "z": "8b2bc5a38cf3f145",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "insert panneau",
        "x": 1220,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3c0a7cb4f10a6589",
        "type": "delay",
        "z": "8b2bc5a38cf3f145",
        "name": "toutes les 5 minutes",
        "pauseType": "rate",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 680,
        "wires": [
            [
                "10de44c86ac36e0d"
            ]
        ]
    },
    {
        "id": "10de44c86ac36e0d",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": " query prise_one",
        "func": "var P1 = msg.payload.Time;\nvar P8 = msg.payload.ENERGY.Power;\nvar P9 = msg.payload.ENERGY.Today;\nvar P10 =msg.payload.ENERGY.Total;\nvar P13 =msg.payload.ENERGY.Yesterday;\n\nP1=new Date(P1);\n\nmsg.payload = {\n    time: P1,\n};\nvar query = \"INSERT INTO prise_one (time,activepower,energytoday,energytotal) VALUES (:time ,\" + P8 + \", \" + P9 + \", \" + P10 + \")\";\nmsg.topic = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 680,
        "wires": [
            [
                "e8fd4f1d105f9737"
            ]
        ]
    },
    {
        "id": "e8fd4f1d105f9737",
        "type": "mysql",
        "z": "8b2bc5a38cf3f145",
        "mydb": "09110bf672e0483b",
        "name": "insert prise_one",
        "x": 1120,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1e3184219c8b4898",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "get previous",
        "func": "const [energytotal, time] = flow.get(['previous_energytotal', 'previous_time'])\n\nif (energytotal && time) {\n    return {\n        topic: 'previous',\n        payload: {\n            energytotal,\n            time,\n        }\n    };\n}\n\nreturn {\n    payload: null,\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 260,
        "wires": [
            [
                "56cd7a28b367dc9a"
            ]
        ]
    },
    {
        "id": "56cd7a28b367dc9a",
        "type": "switch",
        "z": "8b2bc5a38cf3f145",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "b638e39b46a25a62",
                "67c8bfc7745c9954",
                "699125d777addb71",
                "b775a5e075448a11"
            ],
            [
                "bfeef8ec6bd68fa1",
                "b6c059b8d0615604"
            ]
        ]
    },
    {
        "id": "e90b2187ae385d16",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "b638e39b46a25a62",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "previous_time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.time",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1140,
        "y": 340,
        "wires": []
    },
    {
        "id": "67c8bfc7745c9954",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "previous energy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.energytotal",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "bfeef8ec6bd68fa1",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "prepare sql",
        "func": "msg = {};\nmsg.topic = 'SELECT time, energytotal FROM creppcarbone.panneausolaire ORDER BY time DESC LIMIT 1';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 480,
        "wires": [
            [
                "8d83cfee66293605"
            ]
        ]
    },
    {
        "id": "8d83cfee66293605",
        "type": "mysql",
        "z": "8b2bc5a38cf3f145",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "select previous",
        "x": 1180,
        "y": 440,
        "wires": [
            [
                "33754bba7db59316",
                "629c40c25bb80fe3"
            ]
        ]
    },
    {
        "id": "b6c059b8d0615604",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "vide",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "33754bba7db59316",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "sql output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1400,
        "y": 440,
        "wires": []
    },
    {
        "id": "629c40c25bb80fe3",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "transform",
        "func": "if (msg.payload.length === 0) {\n    return {\n        topic: 'previous',\n        payload: {\n            energytotal: 0,\n            time: 0,\n        }\n    };\n}\n\nconst row = msg.payload[0];\nreturn {\n    topic: 'previous',\n    payload: {\n        energytotal: row.energytotal,\n        time: row.time,\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 280,
        "wires": [
            [
                "699125d777addb71",
                "dc3cfead3213e1f9"
            ]
        ]
    },
    {
        "id": "699125d777addb71",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "prepare sql",
        "func": "// Record both inputs\ncontext.data = context.data || {};\nswitch (msg.topic) {\n    case \"input\":\n        context.data.input = msg.payload;\n        break;\n    case \"previous\":\n        context.data.previous = msg.payload;\n        break;\n    default:\n        node.warn(`Unknown topic ${msg.topic}`);\n}\nmsg = null;\n\n// Run if both inputs received\nif (context.data.input && context.data.previous) {\n    const energytotal = context.data.input.ENERGY.Total;\n    const energytoday = context.data.input.ENERGY.Today;\n    const power = context.data.input.ENERGY.Power;\n    const time = new Date();\n    const previous_energytotal= context.data.previous.energytotal;\n    const previous_time = context.data.previous.time;\n\n    flow.set('previous_energytotal', energytotal);\n    flow.set('previous_time', time);\n    context.data = {};\n\n    return {\n        payload: {\n            time: time,\n            energytotal: energytotal,\n            energytoday: energytoday,\n            energycons: energytotal - previous_energytotal,\n            previous_time: previous_time,\n            power:power,\n        },\n        topic: 'INSERT INTO creppcarbone.panneausolaire (`time`, `previous_time`, `energytotal`, `energytoday`, `energycons`, `activepower` ) VALUES (:time, :previous_time, :energytotal, :energytoday, :energycons, :power );'\n    };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 160,
        "wires": [
            [
                "fab10e86bc4ecc15",
                "b288031a14a4fcb3"
            ]
        ]
    },
    {
        "id": "c4e134f97f7fae56",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "set topic",
        "func": "msg.topic = \"input\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "699125d777addb71",
                "aab377bae06270e2"
            ]
        ]
    },
    {
        "id": "b288031a14a4fcb3",
        "type": "mysql",
        "z": "8b2bc5a38cf3f145",
        "d": true,
        "mydb": "09110bf672e0483b",
        "name": "insert panneau",
        "x": 1960,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "dc3cfead3213e1f9",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "debug transform",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1590,
        "y": 280,
        "wires": []
    },
    {
        "id": "fab10e86bc4ecc15",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "debug prepare sql",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1750,
        "y": 160,
        "wires": []
    },
    {
        "id": "253233c1e24d8d91",
        "type": "inject",
        "z": "8b2bc5a38cf3f145",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "bfeef8ec6bd68fa1"
            ]
        ]
    },
    {
        "id": "b775a5e075448a11",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "swich",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 340,
        "wires": []
    },
    {
        "id": "aab377bae06270e2",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "debug  input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "3cae88c92b6b97e5",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "old insert",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 80,
        "wires": []
    },
    {
        "id": "db9c8c88b209a0ea",
        "type": "mqtt in",
        "z": "8b2bc5a38cf3f145",
        "d": true,
        "name": "raspb tasmota panneau solaire",
        "topic": "tele/tasmota_179AB0/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "ece408675f10c1f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6d2a354d6af7a096",
        "type": "mqtt in",
        "z": "8b2bc5a38cf3f145",
        "name": "rasp prise 1 appareil sensor",
        "topic": "tele/tasmota_8336B4/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "ece408675f10c1f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 680,
        "wires": [
            [
                "3c0a7cb4f10a6589",
                "48d85130ed365ed9"
            ]
        ]
    },
    {
        "id": "609030d9f05f38d0",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "tasmota solaire",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "48d85130ed365ed9",
        "type": "debug",
        "z": "8b2bc5a38cf3f145",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 400,
        "y": 680,
        "wires": []
    },
    {
        "id": "ea1202d75ce97a19",
        "type": "function",
        "z": "8b2bc5a38cf3f145",
        "name": "extract number",
        "func": "msg.payload = msg.payload.ENERGY.Power;\n//msg.payload = msg.payload.ENERGY.Power.slice(7, 12);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 20,
        "wires": [
            [
                "f6d87cfef5ff7083",
                "5147630869218f93"
            ]
        ]
    },
    {
        "id": "f6d87cfef5ff7083",
        "type": "ui_chart",
        "z": "8b2bc5a38cf3f145",
        "name": "panneau solaire",
        "group": "b8057ffb06f081d3",
        "order": 3,
        "width": 6,
        "height": 3,
        "label": "panneau solaire",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 380,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5147630869218f93",
        "type": "ui_artlessgauge2",
        "z": "8b2bc5a38cf3f145",
        "group": "b8057ffb06f081d3",
        "order": 1,
        "width": 3,
        "height": 3,
        "name": "panneau sol",
        "icon": "iconify-ic:baseline-solar-power 48px",
        "label": "panneau sol",
        "unit": "Watts",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "style": "1",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "log2": false,
        "sectors": [
            {
                "val": 0,
                "col": "#ff9900",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#ff9900",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": false,
        "diffCenter": "",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "9b1f43a92f6c2192",
        "type": "mqtt in",
        "z": "8b2bc5a38cf3f145",
        "name": "rasp pi 2 tasmota solaire",
        "topic": "tele/tasmota_179AB0/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8dfdc74d6a736590",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "609030d9f05f38d0",
                "76bf4d039fa7e8c0",
                "ea1202d75ce97a19"
            ]
        ]
    }
]